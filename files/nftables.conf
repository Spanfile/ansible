flush ruleset

define fw = ens161
define mgmt = ens192
define srv = ens224
define dmz = ens256
define sync = ens193

define fw_net = 172.24.0.0/24
define mgmt_net = 10.0.10.0/24
define srv_net = 10.0.20.0/24
define dmz_net = 10.0.30.0/24
define sync_net = 10.2.60.0/24

table inet filter {
    chain input {
        type filter hook input priority 0;

        ct state { established, related } accept

        iif { lo, $mgmt, $sync } accept
        iif $srv ip saddr 10.0.20.6 tcp dport 22 accept # monitoring SSH access

        ip protocol icmp accept
        iif $sync ip protocol vrrp accept
        iif $fw ip protocol ospf accept
        iif $fw udp dport 1337 accept # wg

        drop
    }

    chain forward {
        type filter hook forward priority 0;

        ct state { established, related } accept

        # incoming from mgmt
        iif $mgmt accept

        # incoming from fw
        iif $fw oif $dmz accept # allow everything into DMZ
        iif $fw oif $srv ip saddr $fw_net udp dport 123 accept # allow NTP
        iif $fw oif $srv ip saddr $fw_net meta l4proto { tcp, udp } th dport 53 accept # allow DNS

        # incoming from srv
        iif $srv oif $fw ip protocol icmp accept # outgoing ICMP
        iif $srv oif $fw tcp dport { 22, 25, 53, 80, 443, 465, 587 } accept # outgoing TCP services
        iif $srv oif $fw udp dport { 53, 123, 161 } accept # outgoing UDP services

        # monitoring
        iif $srv ip saddr 10.0.20.6 ip protocol icmp accept # ICMP
        iif $srv ip saddr 10.0.20.6 tcp dport { 22, 80, 443 } accept # general TCP services
        iif $srv ip saddr 10.0.20.6 udp dport { 161 } accept # UDP services (SNMP)
        iif $srv ip saddr 10.0.20.6 ip daddr 10.0.30.13 tcp dport { 8112, 58846 } accept # deluge daemon + web ui
        iif $srv ip saddr 10.0.20.6 ip daddr 10.0.30.12 tcp dport 25566 accept # minecraft server
        iif $srv ip saddr 10.0.20.6 ip daddr 10.0.30.15 tcp dport 25567 accept # FTB server
        iif $srv ip saddr 10.0.20.6 ip daddr { 10.0.10.60, 10.0.10.61, 10.0.10.62 } tcp dport { 902, 5989 } accept # ESXi via CIM (5989), and check if vpxa is running (902)
        iif $srv ip saddr 10.0.20.6 ip daddr 10.0.10.70 tcp dport 5480 accept # vcenter appliance management
        iif $srv ip saddr 10.0.20.6 ip daddr 10.0.30.14 tcp dport 8096 accept # jellyfin

        # incoming from dmz
        iif $dmz oif $fw tcp dport { 80, 443 } accept # outgoing HTTP(S)
        iif $dmz ip daddr 10.0.20.30-10.0.20.32 udp dport 123 accept # NTP
        # iif $dmz ip daddr 10.0.20.9 tcp dport 3142 accept # aptcacher
        iif $dmz ip saddr {
            10.0.30.7, # nextcloud
            10.0.30.13, # deluge
            10.0.30.14 # jellyfin
        } ip daddr 10.0.20.10 meta l4proto { tcp, udp } th dport { 111, 2049 } accept # NAS access
        iif $dmz oif $fw ip saddr 10.0.30.13 meta l4proto { tcp, udp } th sport { 6771, 6881, 50000-50500 } accept # deluge bittorrent
        iif $dmz oif $fw ip saddr 10.0.30.13 meta l4proto { tcp, udp } th dport {
            1,
            80,
            451,
            1337,
            2710,
            6771,
            6969,
            50000-50500
        } accept # various bittorrent tracker ports
        iif $dmz oif $fw ip saddr { 10.0.30.7, 10.0.30.16 } tcp dport 465 accept # bitwarden and nextcloud SMTP

        log prefix "FORWARD: " drop
    }

    chain output {
        type filter hook output priority 0;
        accept
    }
}
